#+title: 0000-setup
#+date: <2023-09-26> <2023-09-27>

* System and package manager
I use Arch Linux. So most of the dependencies are installed via
pacman, or paru, which is an AUR helper.

On macOS, just use homebrew.

* Editor
I use Emacs as the text editor, nothing else. I use eglot for lsp support.

* Compiler
- clang

* Install required packages via package manager

** Linux
Arch with paru, you may use pacman.
#+begin_src shell
  paru -S clang vulkan-devel sdl2
#+end_src
** macOS
clang is already installed on macOS, usually with xcode
#+begin_src shell
  brew install sdl2
#+end_src

Do not use the homebrew formula of vulkan, that is unmaintained,
mostly due to some license changed.

Download the sdk from the official website. (It sounds silly.)
https://vulkan.lunarg.com/sdk/home

Follow the instructions of the dmg, I installed the sdk on the home
directory.

Test whether it works.

In the sdk, go to Application. Try to run ~vkcube~.

If you can see a rotating cube in a window, you are good.

Navigate to the root of the sdk, there is a python script for
installation. Run it, with sudo. (Take your risk.)
#+begin_src shell
  sudo python3 install_vulkan.py
#+end_src

All the necessary things are installed to the right position.

* Primitive types
In C, we have to memorize a lot of types and its associated size. Most
modern languages now use something like u32, i32 to represent an
integer signed and unsigned respectively. We can also achieve this in
C, by have a simple header.

This is inspired by the kohi game
engine. https://github.com/travisvroman/kohi/blob/main/engine/src/defines.h

Create ~define.h~ at src.
#+begin_src c
  #ifndef DEFINE_H
  #define DEFINE_H

  typedef unsigned char u8;
  typedef unsigned short u16;
  typedef unsigned int u32;
  typedef unsigned long long u64;

  typedef char i8;
  typedef short i16;
  typedef int i32;
  typedef long long i64;

  typedef float f32;
  typedef double f64;

  typedef char b8;
  typedef int b32;

  #define true 1
  #define false 0

  #endif /* DEFINE_H */
#+end_src

The #ifndef block is necessary to ensure the header is only included
once. Nowadays, people like to use "#pragma once" instead, but both
could work.

Later, we will have some platform detection flags in define.h. For
now, just some types.
